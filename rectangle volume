#include <iostream>
#include <cmath>
class Shape {
public:
    virtual double area() = 0;  
};
class Circle : public Shape {
protected:
    double radius;
public:
    Circle(double r) : radius(r) {}

    double area() override {
        return M_PI * radius * radius;
    }
};
class Rectangle : public Shape {
protected:
    double length;
    double width;
public:
    Rectangle(double l, double w) : length(l), width(w) {}

    double area() override {
        return length * width;
    }
};
class Cylinder : public Circle {
private:
    double height;
public:
    Cylinder(double r, double h) : Circle(r), height(h) {}

    double volume() {
        return area() * height;
    }
};

int main() {
    Circle circle(3.0);
    Rectangle rectangle(4.0, 5.0);
    Cylinder cylinder(2.0, 6.0);

    std::cout << "Area of Circle: " << circle.area() << std::endl;
    std::cout << "Area of Rectangle: " << rectangle.area() << std::endl;
    std::cout << "Volume of Cylinder: " << cylinder.volume() << std::endl;

    return 0;
}
